name: Branch Protection & Quality Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Verifica√ß√µes obrigat√≥rias
      - name: üîç Run ESLint
        run: npm run lint

      - name: üß™ Run unit tests
        run: npm run test:ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üìä Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Job separado para SonarCloud para melhor controle
  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: quality-checks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Generate ESLint report
        run: npm run lint -- --format json --output-file eslint-report.json
        continue-on-error: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Workflow para comentar no PR com status
  pr-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    needs: [quality-checks, sonar-analysis]
    if: always() && github.event_name == 'pull_request'
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Quality Checks Summary')
            );
            
            const qualityStatus = '${{ needs.quality-checks.result }}';
            const sonarStatus = '${{ needs.sonar-analysis.result }}';
            
            const statusEmoji = {
              'success': '‚úÖ',
              'failure': '‚ùå',
              'cancelled': '‚ö†Ô∏è',
              'skipped': '‚è≠Ô∏è'
            };
            
            const body = `## Quality Checks Summary
            
            | Check | Status |
            |-------|--------|
            | ESLint & Tests | ${statusEmoji[qualityStatus] || '‚ùì'} ${qualityStatus} |
            | SonarCloud | ${statusEmoji[sonarStatus] || '‚ùì'} ${sonarStatus} |
            
            ${sonarStatus === 'success' ? 'üéâ All quality checks passed! Ready for review.' : '‚ö†Ô∏è Please fix the issues above before merging.'}
            
            üìä [View detailed SonarCloud report](https://sonarcloud.io/project/overview?id=gabschlemper_my-next-app)
            `;
            
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }